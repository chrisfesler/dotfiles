# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/opt/homebrew/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

COMPLETION_WAITING_DOTS="true"

plugins=(
  bazel
  fzf
  gcloud
  git
  terraform
  z
  zsh-autosuggestions
  zsh-syntax-highlighting
  zsh-eza
  zsh-bat
  you-should-use
)

source $ZSH/oh-my-zsh.sh

# User configuration
source $HOME/.zshenv

export oak="$HOME/src/nuts/oak" # convenience on the CLI
export EDITOR=nvim

alias oak='cd "$oak"'
alias vim='nvim'
alias vi='nvim'
alias cm='chezmoi'
alias cme='chezmoi edit'
alias cmez="chezmoi edit ${HOME}/.zshrc"
alias cma='chezmoi apply'
alias glog="g lg"
alias ds="$oak/tools/localdev/docker_stop.sh"
alias de="$oak/tools/localdev/docker_ensure.sh"

fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src

source /opt/homebrew/opt/powerlevel10k/share/powerlevel10k/powerlevel10k.zsh-theme
source "$HOME/.sdkman/bin/sdkman-init.sh"

# API keys
source $HOME/secrets/openai_api_key.sh
source $HOME/secrets/jira_api_key.sh
source ~/secrets/elasticsearch_api_key.sh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

set -o vi

# PATH and completions for gcloud
if [ -f '$HOME/apps/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/cfesler/apps/google-cloud-sdk/path.zsh.inc'; fi
if [ -f '$HOME/apps/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/cfesler/apps/google-cloud-sdk/completion.zsh.inc'; fi

# one place to set up PATH
export PATH="${HOME}/bin:${HOME}/.local/bin:${PATH}"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh"

# homebrew-installed postgres
export PATH="${PATH}:/opt/homebrew/opt/libpq/bin"

# opam configuration
[[ ! -r $HOME/.opam/opam-init/init.zsh ]] || source /Users/cfesler/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# Shell-GPT integration ZSH v0.2
_sgpt_zsh() {
if [[ -n "$BUFFER" ]]; then
    _sgpt_prev_cmd=$BUFFER
    BUFFER+="âŒ›"
    zle -I && zle redisplay
    BUFFER=$(sgpt --shell <<< "$_sgpt_prev_cmd" --no-interaction)
    zle end-of-line
fi
}
zle -N _sgpt_zsh
bindkey ^l _sgpt_zsh
# Shell-GPT integration ZSH v0.2

# fnm
eval "$(fnm env --use-on-cd)"
# pnpm
export PNPM_HOME="$HOME/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
