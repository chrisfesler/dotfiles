# If you come from bash you might have to change your $PATH.
# one place to set up PATH
export PATH="${HOME}/bin:${HOME}/.local/bin:${PATH}"
if [[ "$(uname)" == "Darwin" ]]; then
  export PATH="/opt/homebrew/bin:/opt/homebrew/opt/ruby/bin:$PATH"
elif [[ "$(uname)" == "Linux" ]]; then
  # ToDo
fi


# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

COMPLETION_WAITING_DOTS="true"

plugins=(
  bazel
  fzf
  gcloud
  git
  terraform
  you-should-use
  z
  zsh-autosuggestions
  zsh-eza
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# User configuration
source $HOME/.zshenv

export oak="$HOME/src/nuts/oak" # convenience on the CLI
export EDITOR=nvim

# set up bat
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
alias cat='bat'
alias pcat='bat --plain'

alias oak='cd "$oak"'
alias vim='nvim'
alias vi='nvim'

alias cm='chezmoi'
alias cme='chezmoi edit'
alias cmez="chezmoi edit ${HOME}/.zshrc"
alias cmcd='cd "$(chezmoi source-path)"'

alias ds="$oak/tools/localdev/docker_stop.sh"
alias de="$oak/tools/localdev/docker_ensure.sh"

alias '?'='bc -le' # quick & dirty calculator

# git aliases
alias g=git
alias ga='git add'
alias gaa='git add --all'
alias gb='git branch'
alias gbd='git branch --delete'
alias gc='git commit --verbose'
alias 'gc!'='git commit --verbose --amend'
alias gcb='git checkout -b'
alias gcf='git config --list'
alias gclean='git clean --interactive -d'
alias gcm='git checkout $(git_main_branch)'
alias gcmsg='git commit --message'
alias gco='git checkout'
alias gd='git diff --word-diff'
alias gdc='git diff --cached --word-diff'
alias gds='git diff --staged --word-diff'
alias glgga='git log --graph --decorate --all'
alias glgm='git log --graph --max-count=10'
alias glgp='git log --stat --patch'
alias glo='git log --oneline --decorate'
alias glod='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset"'
alias glods='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset" --date=short'
alias glog="g lg"
alias gloga='git log --oneline --decorate --graph --all'
alias glol='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset"'
alias glola='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset" --all'
alias glols='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset" --stat'
alias glp=_git_log_prettily
alias gp='git push'
alias gpd='git push --dry-run'
alias 'gpf!'='git push --force-with-leae'
alias grb='git rebase'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'
alias grbi='git rebase --interactive'
alias gss='git status --short'
alias gst='git status'
alias gsta='git stash push'
alias gstaa='git stash apply'
alias gstall='git stash --all'
alias gstc='git stash clear'
alias gstd='git stash drop'
alias gstl='git stash list'
alias gstp='git stash pop'
alias gsts='git stash show --patch'
alias gunwip='git rev-list --max-count=1 --format="%s" HEAD | grep -q "\--wip--" && git reset HEAD~1'
alias gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign --message "--wip-- [skip ci]"'


fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src

source "$HOME/.sdkman/bin/sdkman-init.sh"

# API keys
for f in $(ls $HOME/secrets/*.sh); do
  source $f
done

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

set -o vi

# PATH and completions for gcloud
if [ -f '$HOME/apps/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/cfesler/apps/google-cloud-sdk/path.zsh.inc'; fi
if [ -f '$HOME/apps/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/cfesler/apps/google-cloud-sdk/completion.zsh.inc'; fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh"

# homebrew-installed postgres
export PATH="${PATH}:/opt/homebrew/opt/libpq/bin"

# opam configuration
[[ ! -r $HOME/.opam/opam-init/init.zsh ]] || source /Users/cfesler/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# fnm
eval "$(fnm env --use-on-cd)"
# pnpm
export PNPM_HOME="$HOME/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# Begin Shell-GPT integration ZSH v0.2
_sgpt_zsh() {
if [[ -n "$BUFFER" ]]; then
    _sgpt_prev_cmd=$BUFFER
    BUFFER+="âŒ›"
    zle -I && zle redisplay
    BUFFER=$(sgpt --shell <<< "$_sgpt_prev_cmd" --no-interaction)
    zle end-of-line
fi
}
zle -N _sgpt_zsh
bindkey ^g _sgpt_zsh
# End Shell-GPT integration ZSH v0.2

# Check that the function `starship_zle-keymap-select()` is defined.
# xref: https://github.com/starship/starship/issues/3418
type starship_zle-keymap-select >/dev/null || \
  {
    eval "$(starship init zsh)"
  }


# Added by Windsurf
export PATH="/Users/cfesler/.codeium/windsurf/bin:$PATH"
